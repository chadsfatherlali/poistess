/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.2-master-71674b0
 */
;goog.provide("ng.material.components.gridList");goog.require("ng.material.core");angular.module("material.components.gridList",["material.core"]).directive("mdGridList",GridListDirective).directive("mdGridTile",GridTileDirective).directive("mdGridTileFooter",GridTileCaptionDirective).directive("mdGridTileHeader",GridTileCaptionDirective).factory("$mdGridLayout",GridLayoutFactory);function GridListDirective(d,c,e,b){return{restrict:"E",controller:GridListController,scope:{mdOnLayout:"&"},link:a};function a(g,i,x,s){i.attr("role","list");s.layoutDelegate=r;var E=angular.bind(s,s.invalidateLayout),m=z();g.$on("$destroy",B);function z(){for(var F in c.MEDIA){b(F);b.getQuery(c.MEDIA[F]).addListener(E)}return b.watchResponsiveAttributes(["md-cols","md-row-height"],x,y)}function B(){s.layoutDelegate=angular.noop;m();for(var F in c.MEDIA){b.getQuery(c.MEDIA[F]).removeListener(E)}}function y(F){if(F==null){s.invalidateLayout()}else{if(b(F)){s.invalidateLayout()}}}var j;function r(H){var F=o();var G={tileSpans:D(F),colCount:f(),rowMode:w(),rowHeight:p(),gutter:h()};if(!H&&angular.equals(G,j)){return}var I=e(G.colCount,G.tileSpans,F).map(function(K,J){return{grid:{element:i,style:l(G.colCount,J,G.gutter,G.rowMode,G.rowHeight)},tiles:K.map(function(M,L){return{element:angular.element(F[L]),style:q(M.position,M.spans,G.colCount,J,G.gutter,G.rowMode,G.rowHeight)}})}}).reflow().performance();g.mdOnLayout({$event:{performance:I}});j=G}var n=d.startSymbol();var A=d.endSymbol();function k(F){return n+F+A}var C=d(k("share")+"% - ("+k("gutter")+" * "+k("gutterShare")+")");var v=d("calc(("+k("unit")+" + "+k("gutter")+") * "+k("offset")+")");var u=d("calc(("+k("unit")+") * "+k("span")+" + ("+k("span")+" - 1) * "+k("gutter")+")");function q(L,N,R,P,J,K,F){var M=(1/R)*100;var I=(R-1)/R;var H=C({share:M,gutterShare:I,gutter:J});var G={left:v({unit:H,offset:L.col,gutter:J}),width:u({unit:H,span:N.col,gutter:J}),paddingTop:"",marginTop:"",top:"",height:""};switch(K){case"fixed":G.top=v({unit:F,offset:L.row,gutter:J});G.height=u({unit:F,span:N.row,gutter:J});break;case"ratio":var Q=M/F;var S=C({share:Q,gutterShare:I,gutter:J});G.paddingTop=u({unit:S,span:N.row,gutter:J});G.marginTop=v({unit:S,offset:L.row,gutter:J});break;case"fit":var O=(P-1)/P;var Q=(1/P)*100;var S=C({share:Q,gutterShare:O,gutter:J});G.top=v({unit:S,offset:L.row,gutter:J});G.height=u({unit:S,span:N.row,gutter:J});break}return G}function l(N,L,I,J,F){var G={height:"",paddingBottom:""};switch(J){case"fixed":G.height=u({unit:F,span:L,gutter:I});break;case"ratio":var H=N===1?0:(N-1)/N,K=(1/N)*100,M=K*(1/F),O=C({share:M,gutterShare:H,gutter:I});G.paddingBottom=u({unit:O,span:L,gutter:I});break;case"fit":break}return G}function o(){return[].filter.call(i.children(),function(F){return F.tagName=="MD-GRID-TILE"})}function D(F){return[].map.call(F,function(H){var G=angular.element(H).controller("mdGridTile");return{row:parseInt(b.getResponsiveAttribute(G.$attrs,"md-rowspan"),10)||1,col:parseInt(b.getResponsiveAttribute(G.$attrs,"md-colspan"),10)||1}})}function f(){var F=parseInt(b.getResponsiveAttribute(x,"md-cols"),10);if(isNaN(F)){throw"md-grid-list: md-cols attribute was not found, or contained a non-numeric value"}return F}function h(){return t(b.getResponsiveAttribute(x,"md-gutter")||1)}function p(){var G=b.getResponsiveAttribute(x,"md-row-height");switch(w()){case"fixed":return t(G);case"ratio":var F=G.split(":");return parseFloat(F[0])/parseFloat(F[1]);case"fit":return 0}}function w(){var F=b.getResponsiveAttribute(x,"md-row-height");if(F=="fit"){return"fit"}else{if(F.indexOf(":")!==-1){return"ratio"}else{return"fixed"}}}function t(F){return/\D$/.test(F)?F:F+"px"}}}GridListDirective.$inject=["$interpolate","$mdConstant","$mdGridLayout","$mdMedia"];function GridListController(a){this.layoutInvalidated=false;this.tilesInvalidated=false;this.$timeout_=a.nextTick;this.layoutDelegate=angular.noop}GridListController.$inject=["$mdUtil"];GridListController.prototype={invalidateTiles:function(){this.tilesInvalidated=true;this.invalidateLayout()},invalidateLayout:function(){if(this.layoutInvalidated){return}this.layoutInvalidated=true;this.$timeout_(angular.bind(this,this.layout))},layout:function(){try{this.layoutDelegate(this.tilesInvalidated)}finally{this.layoutInvalidated=false;this.tilesInvalidated=false}}};function GridLayoutFactory(e){var b=a;d.animateWith=function(f){b=!angular.isFunction(f)?a:f};return d;function d(h,k){var g,j,f,i,m,l;i=e.time(function(){j=c(h,k)});return g={layoutInfo:function(){return j},map:function(n){m=e.time(function(){var o=g.layoutInfo();f=n(o.positioning,o.rowCount)});return g},reflow:function(n){l=e.time(function(){var o=n||b;o(f.grid,f.tiles)});return g},performance:function(){return{tileCount:k.length,layoutTime:i,mapTime:m,reflowTime:l,totalTime:i+m+l}}}}function a(g,f){g.element.css(g.style);f.forEach(function(h){h.element.css(h.style)})}function c(m,h){var k=0,i=0,j=o();return{positioning:h.map(function(q,p){return{spans:q,position:l(q,p)}}),rowCount:i+Math.max.apply(Math,j)};function l(r,q){if(r.col>m){throw"md-grid-list: Tile at position "+q+" has a colspan ("+r.col+") that exceeds the column count ("+m+")"}var s=0,p=0;while(p-s<r.col){if(k>=m){n();continue}s=j.indexOf(0,k);if(s===-1||(p=g(s+1))===-1){s=p=0;n();continue}k=p+1}f(s,r.col,r.row);k=s+r.col;return{col:s,row:i}}function n(){k=0;i++;f(0,m,-1)}function f(s,r,q){for(var p=s;p<s+r;p++){j[p]=Math.max(j[p]+q,0)}}function g(q){var p;for(p=q;p<j.length;p++){if(j[p]!==0){return p}}if(p===j.length){return p}}function o(){var q=[];for(var p=0;p<m;p++){q.push(0)}return q}}}GridLayoutFactory.$inject=["$mdUtil"];function GridTileDirective(b){return{restrict:"E",require:"^mdGridList",template:"<figure ng-transclude></figure>",transclude:true,scope:{},controller:["$attrs",function(c){this.$attrs=c}],link:a};function a(g,f,d,e){f.attr("role","listitem");var h=b.watchResponsiveAttributes(["md-colspan","md-rowspan"],d,angular.bind(e,e.invalidateLayout));e.invalidateTiles();g.$on("$destroy",function(){h();e.invalidateLayout()});if(angular.isDefined(g.$parent.$index)){g.$watch(function(){return g.$parent.$index},function c(j,i){if(j===i){return}e.invalidateTiles()})}}}GridTileDirective.$inject=["$mdMedia"];function GridTileCaptionDirective(){return{template:"<figcaption ng-transclude></figcaption>",transclude:true}}ng.material.components.gridList=angular.module("material.components.gridList");