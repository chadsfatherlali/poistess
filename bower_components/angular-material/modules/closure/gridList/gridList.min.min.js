/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.1-master-eacca5e
 */
;goog.provide("ng.material.components.gridList");goog.require("ng.material.core");angular.module("material.components.gridList",["material.core"]).directive("mdGridList",GridListDirective).directive("mdGridTile",GridTileDirective).directive("mdGridTileFooter",GridTileCaptionDirective).directive("mdGridTileHeader",GridTileCaptionDirective).factory("$mdGridLayout",GridLayoutFactory);function GridListDirective(i,j,h,f){return{restrict:"E",controller:GridListController,scope:{mdOnLayout:"&"},link:g};function g(Y,W,c,J){W.attr("role","list");J.layoutDelegate=L;var H=angular.bind(J,J.invalidateLayout),S=a();Y.$on("$destroy",N);function a(){for(var k in j.MEDIA){f(k);f.getQuery(j.MEDIA[k]).addListener(H)}return f.watchResponsiveAttributes(["md-cols","md-row-height"],c,b)}function N(){J.layoutDelegate=angular.noop;S();for(var k in j.MEDIA){f.getQuery(j.MEDIA[k]).removeListener(H)}}function b(k){if(k==null){J.invalidateLayout()}else{if(f(k)){J.invalidateLayout()}}}var V;function L(l){var n=Q();var m={tileSpans:I(n),colCount:Z(),rowMode:d(),rowHeight:O(),gutter:X()};if(!l&&angular.equals(m,V)){return}var k=h(m.colCount,m.tileSpans,n).map(function(o,p){return{grid:{element:W,style:T(m.colCount,p,m.gutter,m.rowMode,m.rowHeight)},tiles:o.map(function(r,q){return{element:angular.element(n[q]),style:M(r.position,r.spans,m.colCount,p,m.gutter,m.rowMode,m.rowHeight)}})}}).reflow().performance();Y.mdOnLayout({$event:{performance:k}});V=m}var R=i.startSymbol();var P=i.endSymbol();function U(k){return R+k+P}var K=i(U("share")+"% - ("+U("gutter")+" * "+U("gutterShare")+")");var e=i("calc(("+U("unit")+" + "+U("gutter")+") * "+U("offset")+")");var F=i("calc(("+U("unit")+") * "+U("span")+" + ("+U("span")+" - 1) * "+U("gutter")+")");function M(r,p,l,n,t,s,x){var q=(1/l)*100;var u=(l-1)/l;var v=K({share:q,gutterShare:u,gutter:t});var w={left:e({unit:v,offset:r.col,gutter:t}),width:F({unit:v,span:p.col,gutter:t}),paddingTop:"",marginTop:"",top:"",height:""};switch(s){case"fixed":w.top=e({unit:x,offset:r.row,gutter:t});w.height=F({unit:x,span:p.row,gutter:t});break;case"ratio":var m=q/x;var k=K({share:m,gutterShare:u,gutter:t});w.paddingTop=F({unit:k,span:p.row,gutter:t});w.marginTop=e({unit:k,offset:r.row,gutter:t});break;case"fit":var o=(n-1)/n;var m=(1/n)*100;var k=K({share:m,gutterShare:o,gutter:t});w.top=e({unit:k,offset:r.row,gutter:t});w.height=F({unit:k,span:p.row,gutter:t});break}return w}function T(l,n,q,p,t){var s={height:"",paddingBottom:""};switch(p){case"fixed":s.height=F({unit:t,span:n,gutter:q});break;case"ratio":var r=l===1?0:(l-1)/l,o=(1/l)*100,m=o*(1/t),k=K({share:m,gutterShare:r,gutter:q});s.paddingBottom=F({unit:k,span:n,gutter:q});break;case"fit":break}return s}function Q(){return[].filter.call(W.children(),function(k){return k.tagName=="MD-GRID-TILE"})}function I(k){return[].map.call(k,function(l){var m=angular.element(l).controller("mdGridTile");return{row:parseInt(f.getResponsiveAttribute(m.$attrs,"md-rowspan"),10)||1,col:parseInt(f.getResponsiveAttribute(m.$attrs,"md-colspan"),10)||1}})}function Z(){var k=parseInt(f.getResponsiveAttribute(c,"md-cols"),10);if(isNaN(k)){throw"md-grid-list: md-cols attribute was not found, or contained a non-numeric value"}return k}function X(){return G(f.getResponsiveAttribute(c,"md-gutter")||1)}function O(){var k=f.getResponsiveAttribute(c,"md-row-height");switch(d()){case"fixed":return G(k);case"ratio":var l=k.split(":");return parseFloat(l[0])/parseFloat(l[1]);case"fit":return 0}}function d(){var k=f.getResponsiveAttribute(c,"md-row-height");if(k=="fit"){return"fit"}else{if(k.indexOf(":")!==-1){return"ratio"}else{return"fixed"}}}function G(k){return/\D$/.test(k)?k:k+"px"}}}GridListDirective.$inject=["$interpolate","$mdConstant","$mdGridLayout","$mdMedia"];function GridListController(b){this.layoutInvalidated=false;this.tilesInvalidated=false;this.$timeout_=b.nextTick;this.layoutDelegate=angular.noop}GridListController.$inject=["$mdUtil"];GridListController.prototype={invalidateTiles:function(){this.tilesInvalidated=true;this.invalidateLayout()},invalidateLayout:function(){if(this.layoutInvalidated){return}this.layoutInvalidated=true;this.$timeout_(angular.bind(this,this.layout))},layout:function(){try{this.layoutDelegate(this.tilesInvalidated)}finally{this.layoutInvalidated=false;this.tilesInvalidated=false}}};function GridLayoutFactory(h){var f=g;i.animateWith=function(a){f=!angular.isFunction(a)?g:a};return i;function i(n,c){var o,d,p,e,a,b;e=h.time(function(){d=j(n,c)});return o={layoutInfo:function(){return d},map:function(k){a=h.time(function(){var l=o.layoutInfo();p=k(l.positioning,l.rowCount)});return o},reflow:function(k){b=h.time(function(){var l=k||f;l(p.grid,p.tiles)});return o},performance:function(){return{tileCount:c.length,layoutTime:e,mapTime:a,reflowTime:b,totalTime:e+a+b}}}}function g(a,b){a.element.css(a.style);b.forEach(function(c){c.element.css(c.style)})}function j(c,r){var e=0,q=0,p=a();return{positioning:r.map(function(k,l){return{spans:k,position:d(k,l)}}),rowCount:q+Math.max.apply(Math,p)};function d(l,m){if(l.col>c){throw"md-grid-list: Tile at position "+m+" has a colspan ("+l.col+") that exceeds the column count ("+c+")"}var k=0,n=0;while(n-k<l.col){if(e>=c){b();continue}k=p.indexOf(0,e);if(k===-1||(n=s(k+1))===-1){k=n=0;b();continue}e=n+1}t(k,l.col,l.row);e=k+l.col;return{col:k,row:q}}function b(){e=0;q++;t(0,c,-1)}function t(k,l,m){for(var n=k;n<k+l;n++){p[n]=Math.max(p[n]+m,0)}}function s(k){var l;for(l=k;l<p.length;l++){if(p[l]!==0){return l}}if(l===p.length){return l}}function a(){var k=[];for(var l=0;l<c;l++){k.push(0)}return k}}}GridLayoutFactory.$inject=["$mdUtil"];function GridTileDirective(c){return{restrict:"E",require:"^mdGridList",template:"<figure ng-transclude></figure>",transclude:true,scope:{},controller:["$attrs",function(a){this.$attrs=a}],link:d};function d(b,i,k,j){i.attr("role","listitem");var a=c.watchResponsiveAttributes(["md-colspan","md-rowspan"],k,angular.bind(j,j.invalidateLayout));j.invalidateTiles();b.$on("$destroy",function(){a();j.invalidateLayout()});if(angular.isDefined(b.$parent.$index)){b.$watch(function(){return b.$parent.$index},function l(e,f){if(e===f){return}j.invalidateTiles()})}}}GridTileDirective.$inject=["$mdMedia"];function GridTileCaptionDirective(){return{template:"<figcaption ng-transclude></figcaption>",transclude:true}}ng.material.components.gridList=angular.module("material.components.gridList");