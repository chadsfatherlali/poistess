/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.1-master-eacca5e
 */
;function MdCheckboxDirective(h,m,g,f,l,k){function b(c,d){return d.type="checkbox",d.tabindex=d.tabindex||"0",c.attr("role",d.type),function(n,w,i,t){function p(r,s,a){i[r]&&n.$watch(i[r],function(u){a[u]&&w.attr(s,a[u])})}function e(a){var r=a.which||a.keyCode;(r===g.KEY_CODE.SPACE||r===g.KEY_CODE.ENTER)&&(a.preventDefault(),w.hasClass("md-focused")||w.addClass("md-focused"),o(a))}function o(a){w[0].hasAttribute("disabled")||n.$apply(function(){var r=i.ngChecked?i.checked:!t.$viewValue;t.$setViewValue(r,a&&a.type),t.$render()})}function q(){t.$viewValue?w.addClass(j):w.removeClass(j)}t=t||l.fakeNgModel(),f(w),i.ngChecked&&n.$watch(n.$eval.bind(n,i.ngChecked),t.$setViewValue.bind(t)),p("ngDisabled","tabindex",{"true":"-1","false":i.tabindex}),m.expectWithText(w,"aria-label"),h.link.pre(n,{on:angular.noop,0:{}},i,[t]),n.mouseActive=!1,w.on("click",o).on("keypress",e).on("mousedown",function(){n.mouseActive=!0,k(function(){n.mouseActive=!1},100)}).on("focus",function(){n.mouseActive===!1&&w.addClass("md-focused")}).on("blur",function(){w.removeClass("md-focused")}),t.$render=q}}h=h[0];var j="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",priority:210,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"></div></div><div ng-transclude class="md-label"></div>',compile:b}}goog.provide("ng.material.components.checkbox"),goog.require("ng.material.core"),angular.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",MdCheckboxDirective),MdCheckboxDirective.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"],ng.material.components.checkbox=angular.module("material.components.checkbox");