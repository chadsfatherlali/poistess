/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.1-master-eacca5e
 */
;function MdChip(b,c){function a(e,f){return e.append(c.processTemplate(d)),function(j,g,k,h){g.addClass("md-chip"),b(g),h&&angular.element(g[0].querySelector(".md-chip-content")).on("blur",function(){h.selectedChip=-1})}}var d=c.processTemplate(DELETE_HINT_TEMPLATE);return{restrict:"E",require:"^?mdChips",compile:a}}function MdChipRemove(a){function b(f,c,g,d){c.on("click",function(e){f.$apply(function(){d.removeChip(f.$$replacedScope.$index)})}),a(function(){c.attr({tabindex:-1,ariaHidden:!0}),c.find("button").attr("tabindex","-1")})}return{restrict:"A",require:"^mdChips",scope:!1,link:b}}function MdChipTransclude(a){function b(g,c,j){var d=g.$parent.$mdChipsCtrl,h=d.parent.$new(!1,d.parent);h.$$replacedScope=g,h.$chip=g.$chip,h.$index=g.$index,h.$mdChipsCtrl=d;var f=d.$scope.$eval(j.mdChipTransclude);c.html(f),a(c.contents())(h)}return{restrict:"EA",terminal:!0,link:b,scope:!1}}function MdChipsCtrl(b,d,a,f,c){this.$timeout=c,this.$mdConstant=d,this.$scope=b,this.parent=b.$parent,this.$log=a,this.$element=f,this.ngModelCtrl=null,this.userInputNgModelCtrl=null,this.userInputElement=null,this.items=[],this.selectedChip=-1,this.hasAutocomplete=!1,this.deleteHint="Press delete to remove this chip.",this.deleteButtonLabel="Remove",this.chipBuffer="",this.useOnAppend=!1,this.useOnSelect=!1}function MdChips(b,g,a,k,d){function h(u,q){function s(l){if(q.ngModel){var m=i[0].querySelector(l);return m&&m.outerHTML}}var i=q.$mdUserTemplate;q.$mdUserTemplate=null;var n=s("md-chips>*[md-chip-remove]")||j.remove,t=s("md-chips>md-chip-template")||j["default"],e=s("md-chips>md-autocomplete")||s("md-chips>input")||j.input,c=i.find("md-chip");return i[0].querySelector("md-chip-template>*[md-chip-remove]")&&k.warn("invalid placement of md-chip-remove within md-chip-template."),function(y,x,v,m){g.initOptionalProperties(y,q),b(x);var w=m[0];if(w.chipContentsTemplate=t,w.chipRemoveTemplate=n,w.chipInputTemplate=e,x.attr({ariaHidden:!0,tabindex:-1}).on("focus",function(){w.onFocus()}),q.ngModel&&(w.configureNgModel(x.controller("ngModel")),v.mdOnAppend&&w.useOnAppendExpression(),v.mdOnRemove&&w.useOnRemoveExpression(),v.mdOnSelect&&w.useOnSelectExpression(),e!=j.input&&y.$watch("$mdChipsCtrl.readonly",function(l){l||g.nextTick(function(){0===e.indexOf("<md-autocomplete")&&w.configureAutocomplete(x.find("md-autocomplete").controller("mdAutocomplete")),w.configureUserInput(x.find("input"))})})),c.length>0){var r=a(c.clone())(y.$parent);d(function(){x.find("md-chips-wrap").prepend(r)})}}}function f(){return{chips:g.processTemplate(MD_CHIPS_TEMPLATE),input:g.processTemplate(CHIP_INPUT_TEMPLATE),"default":g.processTemplate(CHIP_DEFAULT_TEMPLATE),remove:g.processTemplate(CHIP_REMOVE_TEMPLATE)}}var j=f();return{template:function(c,i){return i.$mdUserTemplate=c.clone(),j.chips},require:["mdChips"],restrict:"E",controller:"MdChipsCtrl",controllerAs:"$mdChipsCtrl",bindToController:!0,compile:h,scope:{readonly:"=readonly",placeholder:"@",secondaryPlaceholder:"@",onAppend:"&mdOnAppend",onRemove:"&mdOnRemove",onSelect:"&mdOnSelect",deleteHint:"@",deleteButtonLabel:"@",requireMatch:"=?mdRequireMatch"}}}function MdContactChipsCtrl(){this.selectedItem=null,this.searchText=""}function MdContactChips(b,c){function a(d,e){return function(f,g,j,h){c.initOptionalProperties(f,e),b(g),g.attr("tabindex","-1")}}return{template:function(d,f){return MD_CONTACT_CHIPS_TEMPLATE},restrict:"E",controller:"MdContactChipsCtrl",controllerAs:"$mdContactChipsCtrl",bindToController:!0,compile:a,scope:{contactQuery:"&mdContacts",placeholder:"@",secondaryPlaceholder:"@",contactName:"@mdContactName",contactImage:"@mdContactImage",contactEmail:"@mdContactEmail",contacts:"=ngModel",requireMatch:"=?mdRequireMatch",highlightFlags:"@?mdHighlightFlags"}}}goog.provide("ng.material.components.chips"),goog.require("ng.material.components.autocomplete"),goog.require("ng.material.core"),angular.module("material.components.chips",["material.core","material.components.autocomplete"]),angular.module("material.components.chips").directive("mdChip",MdChip);var DELETE_HINT_TEMPLATE='    <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">      {{$mdChipsCtrl.deleteHint}}    </span>';MdChip.$inject=["$mdTheming","$mdUtil"],angular.module("material.components.chips").directive("mdChipRemove",MdChipRemove),MdChipRemove.$inject=["$timeout"],angular.module("material.components.chips").directive("mdChipTransclude",MdChipTransclude),MdChipTransclude.$inject=["$compile"],angular.module("material.components.chips").controller("MdChipsCtrl",MdChipsCtrl),MdChipsCtrl.$inject=["$scope","$mdConstant","$log","$element","$timeout"],MdChipsCtrl.prototype.inputKeydown=function(a){var b=this.getChipBuffer();switch(a.keyCode){case this.$mdConstant.KEY_CODE.ENTER:if(this.hasAutocomplete&&this.requireMatch||!b){break}a.preventDefault(),this.appendChip(b),this.resetChipBuffer();break;case this.$mdConstant.KEY_CODE.BACKSPACE:if(b){break}a.preventDefault(),a.stopPropagation(),this.items.length&&this.selectAndFocusChipSafe(this.items.length-1)}},MdChipsCtrl.prototype.chipKeydown=function(a){if(!this.getChipBuffer()){switch(a.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:if(this.selectedChip<0){return}a.preventDefault(),this.removeAndSelectAdjacentChip(this.selectedChip);break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:a.preventDefault(),this.selectedChip<0&&(this.selectedChip=this.items.length),this.items.length&&this.selectAndFocusChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:a.preventDefault(),this.selectAndFocusChipSafe(this.selectedChip+1);break;case this.$mdConstant.KEY_CODE.ESCAPE:case this.$mdConstant.KEY_CODE.TAB:if(this.selectedChip<0){return}a.preventDefault(),this.onFocus()}}},MdChipsCtrl.prototype.getPlaceholder=function(){var a=this.items.length&&(""==this.secondaryPlaceholder||this.secondaryPlaceholder);return a?this.placeholder:this.secondaryPlaceholder},MdChipsCtrl.prototype.removeAndSelectAdjacentChip=function(a){var b=this.getAdjacentChipIndex(a);this.removeChip(a),this.$timeout(angular.bind(this,function(){this.selectAndFocusChipSafe(b)}))},MdChipsCtrl.prototype.resetSelectedChip=function(){this.selectedChip=-1},MdChipsCtrl.prototype.getAdjacentChipIndex=function(a){var b=this.items.length-1;return 0==b?-1:a==b?a-1:a},MdChipsCtrl.prototype.appendChip=function(a){this.useOnAppend&&this.onAppend&&(a=this.onAppend({$chip:a})),this.items.indexOf(a)+1||this.items.push(a)},MdChipsCtrl.prototype.useOnAppendExpression=function(){this.useOnAppend=!0},MdChipsCtrl.prototype.useOnRemoveExpression=function(){this.useOnRemove=!0},MdChipsCtrl.prototype.useOnSelectExpression=function(){this.useOnSelect=!0},MdChipsCtrl.prototype.getChipBuffer=function(){return this.userInputElement?this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value:this.chipBuffer},MdChipsCtrl.prototype.resetChipBuffer=function(){this.userInputElement?this.userInputNgModelCtrl?(this.userInputNgModelCtrl.$setViewValue(""),this.userInputNgModelCtrl.$render()):this.userInputElement[0].value="":this.chipBuffer=""},MdChipsCtrl.prototype.removeChip=function(a){var b=this.items.splice(a,1);b&&b.length&&this.useOnRemove&&this.onRemove&&this.onRemove({$chip:b[0],$index:a})},MdChipsCtrl.prototype.removeChipAndFocusInput=function(a){this.removeChip(a),this.onFocus()},MdChipsCtrl.prototype.selectAndFocusChipSafe=function(a){return this.items.length?a===this.items.length?this.onFocus():(a=Math.max(a,0),a=Math.min(a,this.items.length-1),this.selectChip(a),void this.focusChip(a)):(this.selectChip(-1),void this.onFocus())},MdChipsCtrl.prototype.selectChip=function(a){a>=-1&&a<=this.items.length?(this.selectedChip=a,this.useOnSelect&&this.onSelect&&this.onSelect({$chip:this.items[this.selectedChip]})):this.$log.warn("Selected Chip index out of bounds; ignoring.")},MdChipsCtrl.prototype.selectAndFocusChip=function(a){this.selectChip(a),-1!=a&&this.focusChip(a)},MdChipsCtrl.prototype.focusChip=function(a){this.$element[0].querySelector('md-chip[index="'+a+'"] .md-chip-content').focus()},MdChipsCtrl.prototype.configureNgModel=function(a){this.ngModelCtrl=a;var b=this;a.$render=function(){b.items=b.ngModelCtrl.$viewValue}},MdChipsCtrl.prototype.onFocus=function(){var a=this.$element[0].querySelector("input");a&&a.focus(),this.resetSelectedChip()},MdChipsCtrl.prototype.onInputFocus=function(){this.inputHasFocus=!0,this.resetSelectedChip()},MdChipsCtrl.prototype.onInputBlur=function(){this.inputHasFocus=!1},MdChipsCtrl.prototype.configureUserInput=function(b){this.userInputElement=b;var d=b.controller("ngModel");d!=this.ngModelCtrl&&(this.userInputNgModelCtrl=d);var a=this.$scope,f=this,c=function(g,h){a.$evalAsync(angular.bind(f,h,g))};b.attr({tabindex:0}).on("keydown",function(e){c(e,f.inputKeydown)}).on("focus",function(e){c(e,f.onInputFocus)}).on("blur",function(e){c(e,f.onInputBlur)})},MdChipsCtrl.prototype.configureAutocomplete=function(a){a&&(this.hasAutocomplete=!0,a.registerSelectedItemWatcher(angular.bind(this,function(b){b&&(this.appendChip(b),this.resetChipBuffer())})),this.$element.find("input").on("focus",angular.bind(this,this.onInputFocus)).on("blur",angular.bind(this,this.onInputBlur)))},MdChipsCtrl.prototype.hasFocus=function(){return this.inputHasFocus||this.selectedChip>=0},angular.module("material.components.chips").directive("mdChips",MdChips);var MD_CHIPS_TEMPLATE='      <md-chips-wrap          ng-if="!$mdChipsCtrl.readonly || $mdChipsCtrl.items.length > 0"          ng-keydown="$mdChipsCtrl.chipKeydown($event)"          ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus(), \'md-readonly\': !$mdChipsCtrl.ngModelCtrl }"          class="md-chips">        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"            index="{{$index}}"            ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index, \'md-readonly\': $mdChipsCtrl.readonly}">          <div class="md-chip-content"              tabindex="-1"              aria-hidden="true"              ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>          <div ng-if="!$mdChipsCtrl.readonly"               class="md-chip-remove-container"               md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>        </md-chip>        <div ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl"            class="md-chip-input-container"            md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>        </div>      </md-chips-wrap>',CHIP_INPUT_TEMPLATE='        <input            tabindex="0"            placeholder="{{$mdChipsCtrl.getPlaceholder()}}"            aria-label="{{$mdChipsCtrl.getPlaceholder()}}"            ng-model="$mdChipsCtrl.chipBuffer"            ng-focus="$mdChipsCtrl.onInputFocus()"            ng-blur="$mdChipsCtrl.onInputBlur()"            ng-keydown="$mdChipsCtrl.inputKeydown($event)">',CHIP_DEFAULT_TEMPLATE="      <span>{{$chip}}</span>",CHIP_REMOVE_TEMPLATE='      <button          class="md-chip-remove"          ng-if="!$mdChipsCtrl.readonly"          ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"          type="button"          aria-hidden="true"          tabindex="-1">        <md-icon md-svg-icon="md-close"></md-icon>        <span class="md-visually-hidden">          {{$mdChipsCtrl.deleteButtonLabel}}        </span>      </button>';MdChips.$inject=["$mdTheming","$mdUtil","$compile","$log","$timeout"],angular.module("material.components.chips").controller("MdContactChipsCtrl",MdContactChipsCtrl),MdContactChipsCtrl.prototype.queryContact=function(a){var b=this.contactQuery({$query:a});return this.filterSelected?b.filter(angular.bind(this,this.filterSelectedContacts)):b},MdContactChipsCtrl.prototype.itemName=function(a){return a[this.contactName]},MdContactChipsCtrl.prototype.filterSelectedContacts=function(a){return -1==this.contacts.indexOf(a)},angular.module("material.components.chips").directive("mdContactChips",MdContactChips);var MD_CONTACT_CHIPS_TEMPLATE='      <md-chips class="md-contact-chips"          ng-model="$mdContactChipsCtrl.contacts"          md-require-match="$mdContactChipsCtrl.requireMatch"          md-autocomplete-snap>          <md-autocomplete              md-menu-class="md-contact-chips-suggestions"              md-selected-item="$mdContactChipsCtrl.selectedItem"              md-search-text="$mdContactChipsCtrl.searchText"              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"              md-item-text="$mdContactChipsCtrl.itemName(item)"              md-no-cache="true"              md-autoselect              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">            <div class="md-contact-suggestion">              <img                   ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"                  alt="{{item[$mdContactChipsCtrl.contactName]}}" />              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText"                    md-highlight-flags="{{$mdContactChipsCtrl.highlightFlags}}">                {{item[$mdContactChipsCtrl.contactName]}}              </span>              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>            </div>          </md-autocomplete>          <md-chip-template>            <div class="md-contact-avatar">              <img                   ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}" />            </div>            <div class="md-contact-name">              {{$chip[$mdContactChipsCtrl.contactName]}}            </div>          </md-chip-template>      </md-chips>';MdContactChips.$inject=["$mdTheming","$mdUtil"],ng.material.components.chips=angular.module("material.components.chips");