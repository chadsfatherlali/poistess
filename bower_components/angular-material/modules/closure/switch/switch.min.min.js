/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.1-master-eacca5e
 */
;function MdSwitch(h,f,b,l,c,g){function k(a,d){var i=j.compile(a,d);return a.addClass("md-dragging"),function(z,q,A,t){function D(e){B&&B(z)||(e.stopPropagation(),q.addClass("md-dragging"),y={width:n.prop("offsetWidth")},q.removeClass("transition"))}function r(o){if(y){o.stopPropagation(),o.srcEvent&&o.srcEvent.preventDefault();var m=o.pointer.distanceX/y.width,p=t.$viewValue?1+m:m;p=Math.max(0,Math.min(1,p)),n.css(b.CSS.TRANSFORM,"translate3d("+100*p+"%,0,0)"),y.translate=p}}function x(o){if(y){o.stopPropagation(),q.removeClass("md-dragging"),n.css(b.CSS.TRANSFORM,"");var m=t.$viewValue?y.translate>0.5:y.translate<0.5;m&&C(!t.$viewValue),y=null}}function C(e){z.$apply(function(){t.$setViewValue(e),t.$render()})}t=t||f.fakeNgModel();var B=null;null!=A.disabled?B=function(){return !0}:A.ngDisabled&&(B=l(A.ngDisabled));var n=angular.element(q[0].querySelector(".md-thumb-container")),w=angular.element(q[0].querySelector(".md-container"));c(function(){q.removeClass("md-dragging")}),i(z,q,A,t),B&&z.$watch(B,function(m){q.attr("tabindex",m?-1:0)}),g.register(w,"drag"),w.on("$md.dragstart",D).on("$md.drag",r).on("$md.dragend",x);var y}}var j=h[0];return{restrict:"E",priority:210,transclude:!0,template:'<div class="md-container"><div class="md-bar"></div><div class="md-thumb-container"><div class="md-thumb" md-ink-ripple md-ink-ripple-checkbox></div></div></div><div ng-transclude class="md-label"></div>',require:"?ngModel",compile:k}}goog.provide("ng.material.components.switch"),goog.require("ng.material.components.checkbox"),goog.require("ng.material.core"),angular.module("material.components.switch",["material.core","material.components.checkbox"]).directive("mdSwitch",MdSwitch),MdSwitch.$inject=["mdCheckboxDirective","$mdUtil","$mdConstant","$parse","$$rAF","$mdGesture"],ng.material.components["switch"]=angular.module("material.components.switch");