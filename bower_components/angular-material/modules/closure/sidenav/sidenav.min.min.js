/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.1-master-eacca5e
 */
;goog.provide("ng.material.components.sidenav");goog.require("ng.material.components.backdrop");goog.require("ng.material.core");angular.module("material.components.sidenav",["material.core","material.components.backdrop"]).factory("$mdSidenav",SidenavService).directive("mdSidenav",SidenavDirective).directive("mdSidenavFocus",SidenavFocusDirective).controller("$mdSidenavController",SidenavController);function SidenavService(c,d){return function(b){var i;var h="SideNav '"+b+"' is not available!";var j=c.get(b);if(!j){c.notFoundError(b)}return i={isOpen:function(){return j&&j.isOpen()},isLockedOpen:function(){return j&&j.isLockedOpen()},toggle:function(){return j?j.toggle():d.reject(h)},open:function(){return j?j.open():d.reject(h)},close:function(){return j?j.close():d.reject(h)},then:function(f){var e=j?d.when(j):a();return e.then(f||angular.noop)}};function a(){return c.when(b).then(function(e){j=e;return e})}}}SidenavService.$inject=["$mdComponentRegistry","$q"];function SidenavFocusDirective(){return{restrict:"A",require:"^mdSidenav",link:function(g,h,f,e){}}}function SidenavDirective(t,u,v,q,m,o,s,l,n,r){return{restrict:"E",scope:{isOpen:"=?mdIsOpen"},controller:"$mdSidenavController",compile:function(a){a.addClass("md-closed");a.attr("tabIndex","-1");return p}};function p(k,c,F,E){var a;var e=null;var i=n.when(true);var C=s(F.mdIsLockedOpen);var h=function(){return C(k.$parent,{$media:function(w){l.warn("$media is deprecated for is-locked-open. Use $mdMedia instead.");return t(w)},$mdMedia:t})};var g=u.createBackdrop(k,"md-sidenav-backdrop md-opaque ng-enter");q.inherit(g,c);c.on("$destroy",function(){g.remove();E.destroy()});k.$on("$destroy",angular.bind(g,g.remove));k.$watch(h,d);k.$watch("isOpen",b);E.$toggleOpen=f;function d(w,x){k.isLockedOpen=w;if(w===x){c.toggleClass("md-locked-open",!!w)}else{m[w?"addClass":"removeClass"](c,"md-locked-open")}g.toggleClass("md-locked-open",!!w)}function b(x){var y=u.findFocusTarget(c)||u.findFocusTarget(c,"[md-sidenav-focus]")||c;var w=c.parent();w[x?"on":"off"]("keydown",D);g[x?"on":"off"]("click",B);if(x){e=r[0].activeElement}j(x);return i=n.all([x?m.enter(g,w):m.leave(g),m[x?"removeClass":"addClass"](c,"md-closed")]).then(function(){if(k.isOpen){y&&y.focus()}})}function j(w){var x=c.parent();if(w&&!a){a=x.css("overflow");x.css("overflow","hidden")}else{if(angular.isDefined(a)){x.css("overflow",a);a=undefined}}}function f(w){if(k.isOpen==w){return n.when(true)}else{return n(function(x){k.isOpen=w;u.nextTick(function(){i.then(function(y){if(!k.isOpen){e&&e.focus();e=null}x(y)})})})}}function D(w){var x=(w.keyCode===v.KEY_CODE.ESCAPE);return x?B(w):n.when(true)}function B(w){w.preventDefault();w.stopPropagation();return E.close()}}}SidenavDirective.$inject=["$mdMedia","$mdUtil","$mdConstant","$mdTheming","$animate","$compile","$parse","$log","$q","$document"];function SidenavController(j,g,h,i,k){var l=this;l.isOpen=function(){return !!j.isOpen};l.isLockedOpen=function(){return !!j.isLockedOpen};l.open=function(){return l.$toggleOpen(true)};l.close=function(){return l.$toggleOpen(false)};l.toggle=function(){return l.$toggleOpen(!j.isOpen)};l.$toggleOpen=function(a){return k.when(j.isOpen=a)};l.destroy=i.register(l,h.mdComponentId)}SidenavController.$inject=["$scope","$element","$attrs","$mdComponentRegistry","$q"];ng.material.components.sidenav=angular.module("material.components.sidenav");