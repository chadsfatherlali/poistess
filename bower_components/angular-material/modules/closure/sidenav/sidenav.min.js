/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.2-master-71674b0
 */
;goog.provide("ng.material.components.sidenav");goog.require("ng.material.components.backdrop");goog.require("ng.material.core");angular.module("material.components.sidenav",["material.core","material.components.backdrop"]).factory("$mdSidenav",SidenavService).directive("mdSidenav",SidenavDirective).directive("mdSidenavFocus",SidenavFocusDirective).controller("$mdSidenavController",SidenavController);function SidenavService(b,a){return function(f){var d;var e="SideNav '"+f+"' is not available!";var c=b.get(f);if(!c){b.notFoundError(f)}return d={isOpen:function(){return c&&c.isOpen()},isLockedOpen:function(){return c&&c.isLockedOpen()},toggle:function(){return c?c.toggle():a.reject(e)},open:function(){return c?c.open():a.reject(e)},close:function(){return c?c.close():a.reject(e)},then:function(h){var i=c?a.when(c):g();return i.then(h||angular.noop)}};function g(){return b.when(f).then(function(h){c=h;return h})}}}SidenavService.$inject=["$mdComponentRegistry","$q"];function SidenavFocusDirective(){return{restrict:"A",require:"^mdSidenav",link:function(d,c,a,b){}}}function SidenavDirective(c,b,a,f,j,h,d,k,i,e){return{restrict:"E",scope:{isOpen:"=?mdIsOpen"},controller:"$mdSidenavController",compile:function(l){l.addClass("md-closed");l.attr("tabIndex","-1");return g}};function g(x,p,s,t){var r;var A=null;var z=i.when(true);var v=d(s.mdIsLockedOpen);var l=function(){return v(x.$parent,{$media:function(B){k.warn("$media is deprecated for is-locked-open. Use $mdMedia instead.");return c(B)},$mdMedia:c})};var m=b.createBackdrop(x,"md-sidenav-backdrop md-opaque ng-enter");f.inherit(m,p);p.on("$destroy",function(){m.remove();t.destroy()});x.$on("$destroy",function(){m.remove()});x.$watch(l,o);x.$watch("isOpen",q);t.$toggleOpen=n;function o(C,B){x.isLockedOpen=C;if(C===B){p.toggleClass("md-locked-open",!!C)}else{j[C?"addClass":"removeClass"](p,"md-locked-open")}m.toggleClass("md-locked-open",!!C)}function q(C){var B=b.findFocusTarget(p)||b.findFocusTarget(p,"[md-sidenav-focus]")||p;var D=p.parent();D[C?"on":"off"]("keydown",u);m[C?"on":"off"]("click",w);if(C){A=e[0].activeElement}y(C);return z=i.all([C?j.enter(m,D):j.leave(m),j[C?"removeClass":"addClass"](p,"md-closed")]).then(function(){if(x.isOpen){B&&B.focus()}})}function y(C){var B=p.parent();if(C&&!r){r=B.css("overflow");B.css("overflow","hidden")}else{if(angular.isDefined(r)){B.css("overflow",r);r=undefined}}}function n(B){if(x.isOpen==B){return i.when(true)}else{return i(function(C){x.isOpen=B;b.nextTick(function(){z.then(function(D){if(!x.isOpen){A&&A.focus();A=null}C(D)})})})}}function u(C){var B=(C.keyCode===a.KEY_CODE.ESCAPE);return B?w(C):i.when(true)}function w(B){B.preventDefault();B.stopPropagation();return t.close()}}}SidenavDirective.$inject=["$mdMedia","$mdUtil","$mdConstant","$mdTheming","$animate","$compile","$parse","$log","$q","$document"];function SidenavController(e,b,a,f,d){var c=this;c.isOpen=function(){return !!e.isOpen};c.isLockedOpen=function(){return !!e.isLockedOpen};c.open=function(){return c.$toggleOpen(true)};c.close=function(){return c.$toggleOpen(false)};c.toggle=function(){return c.$toggleOpen(!e.isOpen)};c.$toggleOpen=function(g){return d.when(e.isOpen=g)};c.destroy=f.register(c,a.mdComponentId)}SidenavController.$inject=["$scope","$element","$attrs","$mdComponentRegistry","$q"];ng.material.components.sidenav=angular.module("material.components.sidenav");