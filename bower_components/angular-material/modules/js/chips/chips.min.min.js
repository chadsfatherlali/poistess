/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.1-master-eacca5e
 */
;!function(E,y,w){function k(c,a){function e(i,h){return i.append(a.processTemplate(d)),function(l,r,m,p){r.addClass("md-chip"),c(r),p&&y.element(r[0].querySelector(".md-chip-content")).on("blur",function(){p.selectedChip=-1})}}var d=a.processTemplate(x);return{restrict:"E",require:"^?mdChips",compile:e}}function F(a){function c(l,d,m,h){d.on("click",function(e){l.$apply(function(){h.removeChip(l.$$replacedScope.$index)})}),a(function(){d.attr({tabindex:-1,ariaHidden:!0}),d.find("button").attr("tabindex","-1")})}return{restrict:"A",require:"^mdChips",scope:!1,link:c}}function j(a){function c(l,d,r){var h=l.$parent.$mdChipsCtrl,m=h.parent.$new(!1,h.parent);m.$$replacedScope=l,m.$chip=l.$chip,m.$index=l.$index,m.$mdChipsCtrl=h;var p=h.$scope.$eval(r.mdChipTransclude);d.html(p),a(d.contents())(m)}return{restrict:"EA",terminal:!0,link:c,scope:!1}}function A(c,h,a,l,d){this.$timeout=d,this.$mdConstant=h,this.$scope=c,this.parent=c.$parent,this.$log=a,this.$element=l,this.ngModelCtrl=null,this.userInputNgModelCtrl=null,this.userInputElement=null,this.items=[],this.selectedChip=-1,this.hasAutocomplete=!1,this.deleteHint="Press delete to remove this chip.",this.deleteButtonLabel="Remove",this.chipBuffer="",this.useOnAppend=!1,this.useOnSelect=!1}function g(d,m,a,C,h){function r(G,H){function s(c){if(H.ngModel){var o=n[0].querySelector(c);return o&&o.outerHTML}}var n=H.$mdUserTemplate;H.$mdUserTemplate=null;var p=s("md-chips>*[md-chip-remove]")||l.remove,t=s("md-chips>md-chip-template")||l["default"],i=s("md-chips>md-autocomplete")||s("md-chips>input")||l.input,e=n.find("md-chip");return n[0].querySelector("md-chip-template>*[md-chip-remove]")&&C.warn("invalid placement of md-chip-remove within md-chip-template."),function(M,L,J,c){m.initOptionalProperties(M,H),d(L);var I=c[0];if(I.chipContentsTemplate=t,I.chipRemoveTemplate=p,I.chipInputTemplate=i,L.attr({ariaHidden:!0,tabindex:-1}).on("focus",function(){I.onFocus()}),H.ngModel&&(I.configureNgModel(L.controller("ngModel")),J.mdOnAppend&&I.useOnAppendExpression(),J.mdOnRemove&&I.useOnRemoveExpression(),J.mdOnSelect&&I.useOnSelectExpression(),i!=l.input&&M.$watch("$mdChipsCtrl.readonly",function(o){o||m.nextTick(function(){0===i.indexOf("<md-autocomplete")&&I.configureAutocomplete(L.find("md-autocomplete").controller("mdAutocomplete")),I.configureUserInput(L.find("input"))})})),e.length>0){var K=a(e.clone())(M.$parent);h(function(){L.find("md-chips-wrap").prepend(K)})}}}function u(){return{chips:m.processTemplate(z),input:m.processTemplate(B),"default":m.processTemplate(q),remove:m.processTemplate(D)}}var l=u();return{template:function(c,i){return i.$mdUserTemplate=c.clone(),l.chips},require:["mdChips"],restrict:"E",controller:"MdChipsCtrl",controllerAs:"$mdChipsCtrl",bindToController:!0,compile:r,scope:{readonly:"=readonly",placeholder:"@",secondaryPlaceholder:"@",onAppend:"&mdOnAppend",onRemove:"&mdOnRemove",onSelect:"&mdOnSelect",deleteHint:"@",deleteButtonLabel:"@",requireMatch:"=?mdRequireMatch"}}}function b(){this.selectedItem=null,this.searchText=""}function v(c,d){function a(e,h){return function(l,m,n,p){d.initOptionalProperties(l,h),c(m),m.attr("tabindex","-1")}}return{template:function(h,i){return f},restrict:"E",controller:"MdContactChipsCtrl",controllerAs:"$mdContactChipsCtrl",bindToController:!0,compile:a,scope:{contactQuery:"&mdContacts",placeholder:"@",secondaryPlaceholder:"@",contactName:"@mdContactName",contactImage:"@mdContactImage",contactEmail:"@mdContactEmail",contacts:"=ngModel",requireMatch:"=?mdRequireMatch",highlightFlags:"@?mdHighlightFlags"}}}y.module("material.components.chips",["material.core","material.components.autocomplete"]),y.module("material.components.chips").directive("mdChip",k);var x='    <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">      {{$mdChipsCtrl.deleteHint}}    </span>';k.$inject=["$mdTheming","$mdUtil"],y.module("material.components.chips").directive("mdChipRemove",F),F.$inject=["$timeout"],y.module("material.components.chips").directive("mdChipTransclude",j),j.$inject=["$compile"],y.module("material.components.chips").controller("MdChipsCtrl",A),A.$inject=["$scope","$mdConstant","$log","$element","$timeout"],A.prototype.inputKeydown=function(a){var c=this.getChipBuffer();switch(a.keyCode){case this.$mdConstant.KEY_CODE.ENTER:if(this.hasAutocomplete&&this.requireMatch||!c){break}a.preventDefault(),this.appendChip(c),this.resetChipBuffer();break;case this.$mdConstant.KEY_CODE.BACKSPACE:if(c){break}a.preventDefault(),a.stopPropagation(),this.items.length&&this.selectAndFocusChipSafe(this.items.length-1)}},A.prototype.chipKeydown=function(a){if(!this.getChipBuffer()){switch(a.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:if(this.selectedChip<0){return}a.preventDefault(),this.removeAndSelectAdjacentChip(this.selectedChip);break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:a.preventDefault(),this.selectedChip<0&&(this.selectedChip=this.items.length),this.items.length&&this.selectAndFocusChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:a.preventDefault(),this.selectAndFocusChipSafe(this.selectedChip+1);break;case this.$mdConstant.KEY_CODE.ESCAPE:case this.$mdConstant.KEY_CODE.TAB:if(this.selectedChip<0){return}a.preventDefault(),this.onFocus()}}},A.prototype.getPlaceholder=function(){var a=this.items.length&&(""==this.secondaryPlaceholder||this.secondaryPlaceholder);return a?this.placeholder:this.secondaryPlaceholder},A.prototype.removeAndSelectAdjacentChip=function(c){var a=this.getAdjacentChipIndex(c);this.removeChip(c),this.$timeout(y.bind(this,function(){this.selectAndFocusChipSafe(a)}))},A.prototype.resetSelectedChip=function(){this.selectedChip=-1},A.prototype.getAdjacentChipIndex=function(a){var c=this.items.length-1;return 0==c?-1:a==c?a-1:a},A.prototype.appendChip=function(a){this.useOnAppend&&this.onAppend&&(a=this.onAppend({$chip:a})),this.items.indexOf(a)+1||this.items.push(a)},A.prototype.useOnAppendExpression=function(){this.useOnAppend=!0},A.prototype.useOnRemoveExpression=function(){this.useOnRemove=!0},A.prototype.useOnSelectExpression=function(){this.useOnSelect=!0},A.prototype.getChipBuffer=function(){return this.userInputElement?this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value:this.chipBuffer},A.prototype.resetChipBuffer=function(){this.userInputElement?this.userInputNgModelCtrl?(this.userInputNgModelCtrl.$setViewValue(""),this.userInputNgModelCtrl.$render()):this.userInputElement[0].value="":this.chipBuffer=""},A.prototype.removeChip=function(a){var c=this.items.splice(a,1);c&&c.length&&this.useOnRemove&&this.onRemove&&this.onRemove({$chip:c[0],$index:a})},A.prototype.removeChipAndFocusInput=function(a){this.removeChip(a),this.onFocus()},A.prototype.selectAndFocusChipSafe=function(a){return this.items.length?a===this.items.length?this.onFocus():(a=Math.max(a,0),a=Math.min(a,this.items.length-1),this.selectChip(a),void this.focusChip(a)):(this.selectChip(-1),void this.onFocus())},A.prototype.selectChip=function(a){a>=-1&&a<=this.items.length?(this.selectedChip=a,this.useOnSelect&&this.onSelect&&this.onSelect({$chip:this.items[this.selectedChip]})):this.$log.warn("Selected Chip index out of bounds; ignoring.")},A.prototype.selectAndFocusChip=function(a){this.selectChip(a),-1!=a&&this.focusChip(a)},A.prototype.focusChip=function(a){this.$element[0].querySelector('md-chip[index="'+a+'"] .md-chip-content').focus()},A.prototype.configureNgModel=function(a){this.ngModelCtrl=a;var c=this;a.$render=function(){c.items=c.ngModelCtrl.$viewValue}},A.prototype.onFocus=function(){var a=this.$element[0].querySelector("input");a&&a.focus(),this.resetSelectedChip()},A.prototype.onInputFocus=function(){this.inputHasFocus=!0,this.resetSelectedChip()},A.prototype.onInputBlur=function(){this.inputHasFocus=!1},A.prototype.configureUserInput=function(c){this.userInputElement=c;var a=c.controller("ngModel");a!=this.ngModelCtrl&&(this.userInputNgModelCtrl=a);var h=this.$scope,d=this,e=function(m,l){h.$evalAsync(y.bind(d,l,m))};c.attr({tabindex:0}).on("keydown",function(i){e(i,d.inputKeydown)}).on("focus",function(i){e(i,d.onInputFocus)}).on("blur",function(i){e(i,d.onInputBlur)})},A.prototype.configureAutocomplete=function(a){a&&(this.hasAutocomplete=!0,a.registerSelectedItemWatcher(y.bind(this,function(c){c&&(this.appendChip(c),this.resetChipBuffer())})),this.$element.find("input").on("focus",y.bind(this,this.onInputFocus)).on("blur",y.bind(this,this.onInputBlur)))},A.prototype.hasFocus=function(){return this.inputHasFocus||this.selectedChip>=0},y.module("material.components.chips").directive("mdChips",g);var z='      <md-chips-wrap          ng-if="!$mdChipsCtrl.readonly || $mdChipsCtrl.items.length > 0"          ng-keydown="$mdChipsCtrl.chipKeydown($event)"          ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus(), \'md-readonly\': !$mdChipsCtrl.ngModelCtrl }"          class="md-chips">        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"            index="{{$index}}"            ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index, \'md-readonly\': $mdChipsCtrl.readonly}">          <div class="md-chip-content"              tabindex="-1"              aria-hidden="true"              ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>          <div ng-if="!$mdChipsCtrl.readonly"               class="md-chip-remove-container"               md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>        </md-chip>        <div ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl"            class="md-chip-input-container"            md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>        </div>      </md-chips-wrap>',B='        <input            tabindex="0"            placeholder="{{$mdChipsCtrl.getPlaceholder()}}"            aria-label="{{$mdChipsCtrl.getPlaceholder()}}"            ng-model="$mdChipsCtrl.chipBuffer"            ng-focus="$mdChipsCtrl.onInputFocus()"            ng-blur="$mdChipsCtrl.onInputBlur()"            ng-keydown="$mdChipsCtrl.inputKeydown($event)">',q="      <span>{{$chip}}</span>",D='      <button          class="md-chip-remove"          ng-if="!$mdChipsCtrl.readonly"          ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"          type="button"          aria-hidden="true"          tabindex="-1">        <md-icon md-svg-icon="md-close"></md-icon>        <span class="md-visually-hidden">          {{$mdChipsCtrl.deleteButtonLabel}}        </span>      </button>';g.$inject=["$mdTheming","$mdUtil","$compile","$log","$timeout"],y.module("material.components.chips").controller("MdContactChipsCtrl",b),b.prototype.queryContact=function(c){var a=this.contactQuery({$query:c});return this.filterSelected?a.filter(y.bind(this,this.filterSelectedContacts)):a},b.prototype.itemName=function(a){return a[this.contactName]},b.prototype.filterSelectedContacts=function(a){return -1==this.contacts.indexOf(a)},y.module("material.components.chips").directive("mdContactChips",v);var f='      <md-chips class="md-contact-chips"          ng-model="$mdContactChipsCtrl.contacts"          md-require-match="$mdContactChipsCtrl.requireMatch"          md-autocomplete-snap>          <md-autocomplete              md-menu-class="md-contact-chips-suggestions"              md-selected-item="$mdContactChipsCtrl.selectedItem"              md-search-text="$mdContactChipsCtrl.searchText"              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"              md-item-text="$mdContactChipsCtrl.itemName(item)"              md-no-cache="true"              md-autoselect              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">            <div class="md-contact-suggestion">              <img                   ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"                  alt="{{item[$mdContactChipsCtrl.contactName]}}" />              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText"                    md-highlight-flags="{{$mdContactChipsCtrl.highlightFlags}}">                {{item[$mdContactChipsCtrl.contactName]}}              </span>              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>            </div>          </md-autocomplete>          <md-chip-template>            <div class="md-contact-avatar">              <img                   ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}" />            </div>            <div class="md-contact-name">              {{$chip[$mdContactChipsCtrl.contactName]}}            </div>          </md-chip-template>      </md-chips>';v.$inject=["$mdTheming","$mdUtil"]}(window,window.angular);