/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.1-master-eacca5e
 */
;!function(c,d,b){function a(k,h,g,n,m,l){function f(e,i){return i.type="checkbox",i.tabindex=i.tabindex||"0",e.attr("role",i.type),function(s,x,w,q){function o(r,u,p){w[r]&&s.$watch(w[r],function(v){p[v]&&x.attr(u,p[v])})}function y(p){var r=p.which||p.keyCode;(r===g.KEY_CODE.SPACE||r===g.KEY_CODE.ENTER)&&(p.preventDefault(),x.hasClass("md-focused")||x.addClass("md-focused"),t(p))}function t(p){x[0].hasAttribute("disabled")||s.$apply(function(){var r=w.ngChecked?w.checked:!q.$viewValue;q.$setViewValue(r,p&&p.type),q.$render()})}function z(){q.$viewValue?x.addClass(j):x.removeClass(j)}q=q||m.fakeNgModel(),n(x),w.ngChecked&&s.$watch(s.$eval.bind(s,w.ngChecked),q.$setViewValue.bind(q)),o("ngDisabled","tabindex",{"true":"-1","false":w.tabindex}),h.expectWithText(x,"aria-label"),k.link.pre(s,{on:d.noop,0:{}},w,[q]),s.mouseActive=!1,x.on("click",t).on("keypress",y).on("mousedown",function(){s.mouseActive=!0,l(function(){s.mouseActive=!1},100)}).on("focus",function(){s.mouseActive===!1&&x.addClass("md-focused")}).on("blur",function(){x.removeClass("md-focused")}),q.$render=z}}k=k[0];var j="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",priority:210,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"></div></div><div ng-transclude class="md-label"></div>',compile:f}}d.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",a),a.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"]}(window,window.angular);