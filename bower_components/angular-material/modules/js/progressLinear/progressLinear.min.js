/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.1-master-eacca5e
 */
(function(b,a,d){a.module("material.components.progressLinear",["material.core"]).directive("mdProgressLinear",c);function c(h,f,n){var l="determinate",e="indeterminate",g="buffer",k="query";return{restrict:"E",template:'<div class="md-container"><div class="md-dashed"></div><div class="md-bar md-bar1"></div><div class="md-bar md-bar2"></div></div>',compile:m};function m(p,q,o){p.attr("aria-valuemin",0);p.attr("aria-valuemax",100);p.attr("role","progressbar");return i}function i(z,t,v){h(t);var r,s=f.dom.animator.toCss;var x=a.element(t[0].querySelector(".md-bar1")),w=a.element(t[0].querySelector(".md-bar2")),o=a.element(t[0].querySelector(".md-container"));t.attr("md-mode",u());p();q();function q(){v.$observe("value",function(B){var A=j(B);t.attr("aria-valuenow",A);if(u()!=k){y(w,A)}});v.$observe("mdBufferValue",function(A){y(x,j(A))});v.$observe("mdMode",function(A){switch(A){case k:case g:case l:case e:o.removeClass("ng-hide "+r);o.addClass(r="md-mode-"+A);break;default:o.removeClass(r);o.addClass("ng-hide");r=d;break}})}function p(){if(a.isUndefined(v.mdMode)){var A=a.isDefined(v.value);var C=A?l:e;var B="Auto-adding the missing md-mode='{0}' to the ProgressLinear element";n.debug(f.supplant(B,[C]));t.attr("md-mode",C);v.mdMode=C}}function u(){var A=(v.mdMode||"").trim();if(A){switch(A){case l:case e:case g:case k:break;default:A=d;break}}return A}function y(C,B){if(!u()){return}var D=f.supplant("translateX({0}%) scale({1},1)",[(B-100)/2,B/100]);var A=s({transform:D});a.element(C).css(A)}}function j(o){return Math.max(0,Math.min(o||0,100))}}c.$inject=["$mdTheming","$mdUtil","$log"]})(window,window.angular);