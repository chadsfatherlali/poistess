(function(){var SPECIAL_CHARS_REGEXP=/([\:\-\_]+(.))/g;var MOZ_HACK_REGEXP=/^moz([A-Z])/;function camelCase(name){return name.replace(SPECIAL_CHARS_REGEXP,function(_,separator,letter,offset){return offset?letter.toUpperCase():letter}).replace(MOZ_HACK_REGEXP,"Moz$1")}function JSONize(str){try{JSON.parse(str);return str}catch(e){return str.replace(/([\$\w]+)\s*:/g,function(_,$1){return'"'+$1+'":'}).replace(/'([^']+)'/g,function(_,$1){return'"'+$1+'"'})}}var Attr2Options=function($parse,$timeout,NavigatorGeolocation,GeoCoder){var orgAttributes=function(el){(el.length>0)&&(el=el[0]);var orgAttributes={};for(var i=0;i<el.attributes.length;i++){var attr=el.attributes[i];orgAttributes[attr.name]=attr.value}return orgAttributes};var toOptionValue=function(input,options){var output,key=options.key,scope=options.scope;try{var num=Number(input);if(isNaN(num)){throw"Not a number"}else{output=num}}catch(err){try{if(input.match(/^[\+\-]?[0-9\.]+,[ ]*\ ?[\+\-]?[0-9\.]+$/)){input="["+input+"]"}output=JSON.parse(JSONize(input));if(output instanceof Array){var t1stEl=output[0];if(t1stEl.constructor==Object){}else{if(t1stEl.constructor==Array){output=output.map(function(el){return new google.maps.LatLng(el[0],el[1])})}else{if(!isNaN(parseFloat(t1stEl))&&isFinite(t1stEl)){return new google.maps.LatLng(output[0],output[1])}}}}else{if(output===Object(output)){output=getOptions(output,options)}}}catch(err2){if(input.match(/^[A-Z][a-zA-Z0-9]+\(.*\)$/)){try{var exp="new google.maps."+input;output=eval(exp)}catch(e){output=input}}else{if(input.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/)){try{var matches=input.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/);output=google.maps[matches[1]][matches[2]]}catch(e){output=input}}else{if(input.match(/^[A-Z]+$/)){try{var capitalizedKey=key.charAt(0).toUpperCase()+key.slice(1);if(key.match(/temperatureUnit|windSpeedUnit|labelColor/)){capitalizedKey=capitalizedKey.replace(/s$/,"");output=google.maps.weather[capitalizedKey][input]}else{output=google.maps[capitalizedKey][input]}}catch(e){output=input}}else{if(input.match(/\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/)){try{output=new Date(input)}catch(e){output=input}}else{output=input}}}}}}return output};var getAttrsToObserve=function(attrs){var attrsToObserve=[];if(attrs["ng-repeat"]||attrs.ngRepeat){void (0)}else{for(var attrName in attrs){var attrValue=attrs[attrName];if(attrValue&&attrValue.match(/\{\{.*\}\}/)){console.log("setting attribute to observe",attrName,camelCase(attrName),attrValue);attrsToObserve.push(camelCase(attrName))}}}return attrsToObserve};var filter=function(attrs){var options={};for(var key in attrs){if(key.match(/^\$/)||key.match(/^ng[A-Z]/)){void (0)}else{options[key]=attrs[key]}}return options};var getOptions=function(attrs,scope){var options={};for(var key in attrs){if(attrs[key]){if(key.match(/^on[A-Z]/)){continue}else{if(key.match(/ControlOptions$/)){continue}else{if(typeof attrs[key]!=="string"){options[key]=attrs[key]}else{options[key]=toOptionValue(attrs[key],{scope:scope,key:key})}}}}}return options};var getEvents=function(scope,attrs){var events={};var toLowercaseFunc=function($1){return"_"+$1.toLowerCase()};var eventFunc=function(attrValue){var matches=attrValue.match(/([^\(]+)\(([^\)]*)\)/);var funcName=matches[1];var argsStr=matches[2].replace(/event[ ,]*/,"");var argsExpr=$parse("["+argsStr+"]");return function(event){var args=argsExpr(scope);function index(obj,i){return obj[i]}var f=funcName.split(".").reduce(index,scope);f&&f.apply(this,[event].concat(args));$timeout(function(){scope.$apply()})}};for(var key in attrs){if(attrs[key]){if(!key.match(/^on[A-Z]/)){continue}var eventName=key.replace(/^on/,"");eventName=eventName.charAt(0).toLowerCase()+eventName.slice(1);eventName=eventName.replace(/([A-Z])/g,toLowercaseFunc);var attrValue=attrs[key];events[eventName]=new eventFunc(attrValue)}}return events};var getControlOptions=function(filtered){var controlOptions={};if(typeof filtered!="object"){return false}for(var attr in filtered){if(filtered[attr]){if(!attr.match(/(.*)ControlOptions$/)){continue}var orgValue=filtered[attr];var newValue=orgValue.replace(/'/g,'"');newValue=newValue.replace(/([^"]+)|("[^"]+")/g,function($0,$1,$2){if($1){return $1.replace(/([a-zA-Z0-9]+?):/g,'"$1":')}else{return $2}});try{var options=JSON.parse(newValue);for(var key in options){if(options[key]){var value=options[key];if(typeof value==="string"){value=value.toUpperCase()}else{if(key==="mapTypeIds"){value=value.map(function(str){if(str.match(/^[A-Z]+$/)){return google.maps.MapTypeId[str.toUpperCase()]}else{return str}})}}if(key==="style"){var str=attr.charAt(0).toUpperCase()+attr.slice(1);var objName=str.replace(/Options$/,"")+"Style";options[key]=google.maps[objName][value]}else{if(key==="position"){options[key]=google.maps.ControlPosition[value]}else{options[key]=value}}}}controlOptions[attr]=options}catch(e){console.error("invald option for",attr,newValue,e,e.stack)}}}return controlOptions};return{camelCase:camelCase,filter:filter,getOptions:getOptions,getEvents:getEvents,getControlOptions:getControlOptions,toOptionValue:toOptionValue,getAttrsToObserve:getAttrsToObserve,orgAttributes:orgAttributes}};Attr2Options.$inject=["$parse","$timeout","NavigatorGeolocation","GeoCoder"];angular.module("ngMap").service("Attr2Options",Attr2Options)})();