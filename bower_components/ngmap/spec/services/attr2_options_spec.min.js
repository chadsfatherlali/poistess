describe("Attr2Options",function(){var a,b;beforeEach(function(){module("ngMap");inject(function(c,d){a=c;a.google={maps:{Marker:function(){},MapTypeId:{HYBRID:"hybrid"}}};a.$apply();b=d.get("Attr2Options")})});describe("#filter",function(){it("should filter all angularjs methods",function(){var c={a:1,$a:1,$$a:1};expect(b.filter(c).a).toEqual(1);expect(b.filter(c).$a).toEqual(undefined);expect(b.filter(c).$$a).toEqual(undefined)})});describe("#getOptions",function(){it("should filter out ControlOptions",function(){var c={a:1,aControlOptions:1};expect(b.getOptions(c).aControlOptions).toEqual(undefined)});it("should filter out events",function(){var c={a:1,onClick:"func"};expect(b.getOptions(c).onClick).toEqual(undefined)});it("should convert string to number",function(){var c={a:"100.99"};expect(b.getOptions(c).a).toEqual(100.99)});it("should convert JSON to an object",function(){var c={a:'{"foo":123}'};expect(b.getOptions(c).a.foo).toEqual(123)});it("should convert object-like JSON string to an object",function(){var c={a:"{ hello: 'world',foo:1,  bar  : '2', foo1: 1, _bar : 2, $2: 3, 'xxx': 5, \"fuz\": 4, places: ['Africa', 'America', 'Asia', 'Australia'] }"};expect(b.getOptions(c).a.hello).toEqual("world")});it("should convert Class name to google object",function(){var c={a:"Marker()"};expect(typeof b.getOptions(c,a).a).toEqual("object")});it("should convert constant to google constant",function(){var c={a:"MapTypeId.HYBRID"};expect(b.getOptions(c,a).a).toEqual(google.maps.MapTypeId.HYBRID);c={MapTypeId:"HYBRID"};expect(b.getOptions(c,a).MapTypeId).toEqual(google.maps.MapTypeId.HYBRID)});it("should convert ISO date strings to Date objects",function(){var c={a:"2015-08-13T04:11:23.005Z"};expect(b.getOptions(c,a).a instanceof Date).toBe(true)});it("should convert nested date to Date object",function(){var c={a:'{"departureTime":"2015-08-13T18:00:21.846Z"}'};expect(typeof b.getOptions(c,a).a).toEqual("object");expect(b.getOptions(c,a).a.departureTime instanceof Date).toEqual(true)});it("should convert nested value to google object",function(){var c={circleOptions:'{"center": "LatLng(80,-49)"}'};expect(b.getOptions(c,a).circleOptions.center.lat()).toEqual(80);expect(b.getOptions(c,a).circleOptions.center.lng()).toEqual(-49)})});describe("#getControlOptions",function(){it("should filter out non control options",function(){var c={a:1};expect(b.getControlOptions(c).a).toEqual(undefined)});it("should accept object notation, i.e {foo:1}",function(){var c={aControlOptions:"{foo:1}"};expect(b.getControlOptions(c).aControlOptions.foo).toEqual(1)});it('should convert string to uppercase. i.e {"a":"foo"}',function(){var c={aControlOptions:'{"foo":"bar"}'};expect(b.getControlOptions(c).aControlOptions.foo).toEqual("BAR")});it("should convert mapTypeIds to google MapTypeIds",function(){var c={aControlOptions:'{"mapTypeIds":["HYBRID"]}'};expect(b.getControlOptions(c).aControlOptions.mapTypeIds).toEqual(["hybrid"])});it("should convert style to matching google ones, i.e. ZoomControlStyle",function(){var c={zoomControlOptions:'{"style":"SMALL"}'};expect(b.getControlOptions(c).zoomControlOptions.style).toEqual(1)});it("should convert position to matching google ones, i.e. google.maps.ControlPosition",function(){var c={zoomControlOptions:'{"position":"TOP_LEFT"}'};expect(b.getControlOptions(c).zoomControlOptions.position).toEqual(1)})});describe("#getEvents",function(){it("should filter out non events",function(){var c={a:1};expect(b.getEvents(a,c).a).toEqual(undefined)});it("should set scope function as events",function(){a.scopeFunc=function(){};var c={onClick:"scopeFunc()"};var d=b.getEvents(a,c);expect(typeof d.click).toEqual("function")});it("should pass arguments to callback",function(){a.name="dave";a.scopeFunc=function(){};var c={onClick:"scopeFunc(name)"};var d=b.getEvents(a,c);var e={};spyOn(a,"scopeFunc");d.click(e);expect(a.scopeFunc).toHaveBeenCalledWith(e,a.name)});it("should respond to scope model changes",function(){a.name="dave";a.scopeFunc=function(){};var c={onClick:"scopeFunc(name)"};var d=b.getEvents(a,c);var e;spyOn(a,"scopeFunc");a.name="george";d.click(e);expect(a.scopeFunc).toHaveBeenCalledWith(e,a.name)})});describe("#getAttrsToObserve",function(){it("should return no attributes to observe with ng-repeat",function(){var c={a:"1",b:"{{foo}}","ng-repeat":"bar"};expect([]).toEqual(b.getAttrsToObserve(c))});it("should return attributes to observe",function(){var c={a:"1",b:"{{foo}}",c:"{{bar}}"};expect(["b","c"]).toEqual(b.getAttrsToObserve(c))})});describe("#observeAndSet",function(){});describe("#observeAttrSetSet",function(){});describe("#orgAttributes",function(){});describe("#setDelayedGeoLocation",function(){});describe("#observeAndSet",function(){})});